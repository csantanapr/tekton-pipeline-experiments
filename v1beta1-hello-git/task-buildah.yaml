apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah
spec:
  params:
    - name: BUILDER_IMAGE
      description: The location of the buildah builder image.
      default: quay.io/buildah/stable:v1.14.8
    - name: STORAGE_DRIVER
      description: Set buildah storage driver
      default: overlay
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
      default: ./Dockerfile
    - name: CONTEXT
      description: Path to the directory to use as context.
      default: .
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
    - name: FORMAT
      description: The format of the built container, oci or docker
      default: "oci"
    - name: image
    - name: url
    - name: revision
      default: master
  steps:
    - name: git-clone
      image: alpine/git
      script: |
        set -o pipefail
        git clone -b $(params.revision) --depth 1 $(params.url) /source
        cd /source
        echo "$(git rev-parse HEAD)" > /source/.git/FETCH_HEAD
      volumeMounts:
        - name: source
          mountPath: /source
    - name: build
      image: $(params.BUILDER_IMAGE)
      workingdir: /source
      script: |
        set -uo pipefail
        SHORT_GIT_HASH="$(cat .git/FETCH_HEAD | awk '{print substr($1,0,7)}')"
        NEW_IMAGE_ID="$(params.image):$SHORT_GIT_HASH"
        echo "SHORT_GIT_HASH = $SHORT_GIT_HASH"
        echo "Building Image $NEW_IMAGE_ID"
        buildah --storage-driver=$(params.STORAGE_DRIVER) bud --format=$(params.FORMAT) --tls-verify=$(params.TLSVERIFY) -f "$(params.DOCKERFILE)" -t $NEW_IMAGE_ID $(params.CONTEXT)
        echo "Pushing Image $NEW_IMAGE_ID"
        buildah  --storage-driver=$(params.STORAGE_DRIVER) push --tls-verify="$(params.TLSVERIFY)" --digestfile ./image-digest $NEW_IMAGE_ID docker://$NEW_IMAGE_ID
        cat ./image-digest | tee /tekton/results/IMAGE_DIGEST
      securityContext:
        privileged: true
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: source
          mountPath: /source
  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: source
      emptyDir: {}
